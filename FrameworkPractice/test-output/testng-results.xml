<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="9" total="15" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-07T14:33:23 EDT" name="Suite" finished-at="2025-05-07T14:33:23 EDT" duration-ms="64">
    <groups>
      <group name="Smoke">
        <method signature="CarLoanTestCases.apiCarLoan()[pri:0, instance:framework.CarLoanTestCases@24aed80c]" name="apiCarLoan" class="framework.CarLoanTestCases"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-05-07T14:33:23 EDT" name="Personal Loan" finished-at="2025-05-07T14:33:23 EDT" duration-ms="61">
      <class name="framework.PersonalLoanTestCase">
        <test-method signature="personalLoan(java.lang.String,java.lang.String)[pri:0, instance:framework.PersonalLoanTestCase@62379589]" started-at="2025-05-07T14:33:23 EDT" name="personalLoan" data-provider="getData" finished-at="2025-05-07T14:33:23 EDT" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalLoan -->
        <test-method signature="personalLoan(java.lang.String,java.lang.String)[pri:0, instance:framework.PersonalLoanTestCase@62379589]" started-at="2025-05-07T14:33:23 EDT" name="personalLoan" data-provider="getData" finished-at="2025-05-07T14:33:23 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invaliddata]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invaliddatapassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalLoan -->
        <test-method signature="personalLoan(java.lang.String,java.lang.String)[pri:0, instance:framework.PersonalLoanTestCase@62379589]" started-at="2025-05-07T14:33:23 EDT" name="personalLoan" data-provider="getData" finished-at="2025-05-07T14:33:23 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalLoan -->
      </class> <!-- framework.PersonalLoanTestCase -->
      <class name="framework.TestRunning">
        <test-method is-config="true" signature="preRequisite()[pri:0, instance:framework.TestRunning@411f53a0]" started-at="2025-05-07T14:33:23 EDT" name="preRequisite" finished-at="2025-05-07T14:33:23 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRequisite -->
        <test-method signature="Demo2()[pri:0, instance:framework.TestRunning@411f53a0]" started-at="2025-05-07T14:33:23 EDT" name="Demo2" finished-at="2025-05-07T14:33:23 EDT" duration-ms="18" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at framework.TestRunning.Demo2(TestRunning.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo2 -->
        <test-method is-config="true" signature="postRequisite()[pri:0, instance:framework.TestRunning@411f53a0]" started-at="2025-05-07T14:33:23 EDT" name="postRequisite" finished-at="2025-05-07T14:33:23 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postRequisite -->
      </class> <!-- framework.TestRunning -->
    </test> <!-- Personal Loan -->
    <test started-at="2025-05-07T14:33:23 EDT" name="Car Loan" finished-at="2025-05-07T14:33:23 EDT" duration-ms="64">
      <class name="framework.TestRunning">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:framework.TestRunning@411f53a0]" started-at="2025-05-07T14:33:23 EDT" name="beforeSuite" finished-at="2025-05-07T14:33:23 EDT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:framework.TestRunning@411f53a0]" started-at="2025-05-07T14:33:23 EDT" name="afterSuite" finished-at="2025-05-07T14:33:23 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- framework.TestRunning -->
      <class name="framework.CarLoanTestCases">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:framework.CarLoanTestCases@24aed80c]" started-at="2025-05-07T14:33:23 EDT" name="beforeClass" finished-at="2025-05-07T14:33:23 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="apiCarLoan()[pri:0, instance:framework.CarLoanTestCases@24aed80c]" started-at="2025-05-07T14:33:23 EDT" name="apiCarLoan" finished-at="2025-05-07T14:33:23 EDT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiCarLoan -->
        <test-method signature="carLoan(java.lang.String,java.lang.String)[pri:0, instance:framework.CarLoanTestCases@24aed80c]" started-at="2025-05-07T14:33:23 EDT" name="carLoan" finished-at="2025-05-07T14:33:23 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CarLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carLoan -->
        <test-method is-config="true" signature="afterClassCarLoan()[pri:0, instance:framework.CarLoanTestCases@24aed80c]" started-at="2025-05-07T14:33:23 EDT" name="afterClassCarLoan" finished-at="2025-05-07T14:33:23 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassCarLoan -->
      </class> <!-- framework.CarLoanTestCases -->
    </test> <!-- Car Loan -->
  </suite> <!-- Suite -->
</testng-results>
